import { ChevronLeft, MapPin } from 'lucide-react';
import { useNavigate } from 'react-router-dom';

export default function CollectionDetail({ open, onClose, collection, places = [] }) {
  const navigate = useNavigate();
  if (!open || !collection) return null;

  return (
    // Position absolute so it stays inside app container (Layout)
    <div className="absolute inset-0 z-[100] flex items-center justify-center pointer-events-auto">
      {/* dim within app container */}
      <div className="absolute inset-0 bg-black/30" onClick={onClose} />

      <div className="relative bg-white w-[390px] max-w-full h-[844px] rounded-[50px] overflow-hidden">
        {/* Header with back button */}
        <div className="flex items-center justify-center p-5 border-b relative">
          <button onClick={onClose} className="absolute left-4 top-4 rounded-full p-1 text-gray-500 hover:bg-gray-100">
            <ChevronLeft size={22} />
          </button>
          <h3 className="text-[24px] font-semibold">{collection.title}</h3>
        </div>

        {/* Content list */}
        <div className="p-5 overflow-y-auto h-[calc(100%-160px)] space-y-4">
          {places.length === 0 ? (
            <div className="text-center text-gray-500 mt-8">보석함에 담긴 장소가 없습니다.</div>
          ) : (
            places.map(place => (
              <div key={place.id} className="relative w-full bg-white rounded-lg border border-gray-300 shadow-sm p-3">
                <div className="flex gap-3">
                  <div className="w-[80px] h-[72px] bg-gray-200 rounded-md overflow-hidden flex-shrink-0">
                    <img src={place.images?.[0] || '/images/tmp.jpg'} alt={place.name} className="w-full h-full object-cover" />
                  </div>
                  <div className="flex-1">
                    <div className="flex items-start justify-between">
                      <div>
                        <div className="text-[16px] font-semibold text-black">{place.name}</div>
                        <div className="text-[13px] text-gray-500 mt-1">{place.address?.district || place.address?.full || ''}</div>
                        <div className="text-[10px] text-gray-500 mt-2">영업시간: {place.hours?.todayHours || '정보 없음'}</div>
                      </div>
                      <div className="text-[12px] text-gray-500 text-right">
                        <div className="text-sm font-medium">{place.rating?.average ?? '-'}</div>
                        <div className="text-xs">{place.rating?.count ?? 0}개</div>
                      </div>
                    </div>
                  </div>
                </div>
                <button
                  onClick={() => navigate(`/place/${place.id}`)}
                  className="absolute inset-0"
                  aria-label={`Open ${place.name}`}
                />
              </div>
            ))
          )}
        </div>

        {/* Footer actions (map pin etc) */}
        <div className="absolute bottom-0 left-0 right-0 p-5 bg-white border-t flex items-center justify-between">
          <div className="flex items-center gap-3">
            <div className="w-10 h-10 rounded-full bg-gradient-to-br from-[#2A3045] to-[#747FA7]" />
            <div className="w-10 h-10 rounded-full bg-white border-3 border-[#BCBCBC]" />
            <MapPin size={24} />
          </div>
          <div />
        </div>
      </div>
    </div>
  );
}
